buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://maven.parchmentmc.org"}
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }

        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath group: "gradle.plugin.com.matthewprenger", name : "CurseGradle", version: "1.4.0"
        classpath group: "org.parchmentmc", name: "librarian", version: "1.+"
    }
}
apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.parchmentmc.librarian.forgegradle"
apply plugin: "com.matthewprenger.cursegradle"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

version = minecraft_version + "-" + mod_version
group = "io.github.drmanganese.endercrop"
archivesBaseName = "endercrop"

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'endercrop'

            mods {
                endercrop {
                    source sourceSets.main
                }
            }
        }

        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=endercrop.mixins.json"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                endercrop {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                endercrop {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.k-4u.nl" }
}

dependencies {
    minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"
    implementation fg.deobf("mcjty.theoneprobe:theoneprobe:1.18-5.1.0-8") { transitive = false }
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "FMLAT": "accesstransformer.cfg",
                "Specification-Title": "endercrop",
                "Specification-Vendor": "DrManganese",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": getArchiveVersion(),
                "Implementation-Vendor" :"DrManganese",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${archivesBaseName}.mixins.json"
        ])
    }
    from "LICENSE"
}

curseforge {
    apiKey = curseforgeToken
    project {
        id = "242269"
        addGameVersion "1.18.2"
        changelogType = "markdown"
        changelog = file("CHANGELOG.md")
        releaseType = "beta"
        mainArtifact jar
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    debug.verbose = true
    debug.export = true
    dumpTargetOnFailure = true

    add sourceSets.main, "${archivesBaseName}.refmap.json"
}